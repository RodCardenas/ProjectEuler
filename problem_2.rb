# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def even_fibonacci_numbers_sum(limit)
  fibonacci_series_upto_limit = my_fibonacci_generator(limit)
  sum = 0

  fibonacci_series_upto_limit.each do |num|
    sum += num if num % 2 == 0
  end

  sum
end

def my_fibonacci_generator(limit)
  fibonacci_series = [1, 2]

  i = 0
  while fibonacci_series.last <= limit
    fibonacci_series << fibonacci_series[i] + fibonacci_series[i + 1]
    i += 1
  end

  fibonacci_series
end

puts "#{even_fibonacci_numbers_sum(4000000)}"
